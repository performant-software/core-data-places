---
import type { GetStaticPaths } from "astro";
import Container from "@components/Container.astro";
import { getTranslations } from "@i18n/server";
import Layout from "@layouts/Layout.astro";
import { getEntry } from "astro:content";
import { getCollection } from "astro:content";
import config from "@config";

// TODO: I haven't figured out how to get this to be set by config or env variable
export const prerender = process.env.PUBLIC_STATIC_BUILD;

const { t } = await getTranslations(Astro.currentLocale);

const { model, slug } = Astro.params;

const lang = Astro.currentLocale;

let data: any;

if (prerender) {
  // @ts-ignore
  const entryResponse = await getEntry(model, slug);
  data = entryResponse.data;
} else {
  const apiUrl = new URL(`/api/${model}/${slug}.json`, Astro.url.origin);
  data = await fetch(apiUrl).then((res) => res.json());
}

export const getStaticPaths = (async () => {
  if (!config.static_build) {
    return [];
  }
  const models = config.detail_pages;
  let routes = [];
  for (const model of models) {
    // @ts-ignore
    const pages = await getCollection(model);
    if (pages && pages.length) {
      for (const lang of config.i18n.locales) {
        const locPages = pages.map((page) => ({
          params: {
            lang: lang,
            // @ts-ignore
            slug: page.id,
            model: model,
          },
        }));
        routes = [...routes, ...locPages];
      }
    }
  }
  return routes;
}) satisfies GetStaticPaths;
---

<Layout footer t={t} title={data.name}>
  <Container className="flex flex-col py-12 gap-12 w-full">
    <h1 class="font-bold text-2xl">{data.name}</h1>
    {data.description ? <p>{data.description}</p> : null}
    <div class="flex flex-col gap-6">
      {
        data?.relatedRecords &&
          Object.keys(data.relatedRecords).map((key) =>
            data.relatedRecords[key]?.length ? (
              <div class="flex flex-col gap-4">
                {/* TODO: this string should come from i18n */}
                <h2 class="capitalize text-xl font-semibold">{`Related ${key}`}</h2>
                <ul>
                  {data.relatedRecords[key].map((record) =>
                    config.detail_pages.includes(key) ? (
                      <a href={`${lang}/${key}/${record.uuid}`}>
                        <li>{record.name}</li>
                      </a>
                    ) : (
                      <li>{record.name}</li>
                    )
                  )}
                </ul>
              </div>
            ) : null
          )
      }
    </div>
  </Container>
</Layout>
