---
import { getTranslations } from '@backend/i18n';
import { fetchPosts } from '@backend/tina';
import Card from '@components/Card.astro';
import Cards from '@components/Cards.astro';
import Container from '@components/Container.astro';
import config from '@config';
import { getLocalizedContent } from '@i18n/utils';
import Layout from '@layouts/Layout.astro';
import { hasPostsContent } from '@utils/config';
import { getRelativeLocaleUrl } from 'astro:i18n';
import _ from 'underscore';

const { t } = await getTranslations(Astro.currentLocale);
const posts = await fetchPosts();

export const getStaticPaths = () => {
  if (!hasPostsContent(config)) {
    return [];
  }

  return _.map(config.i18n.locales, (lang) => ({ params: { lang }}));
}

//Localize the post titles
const localeField = Astro.currentLocale.replaceAll('-', '_') //this is to deal with Tina's field naming conventions
const localizedPosts = _.map(posts, (post: any) => (getLocalizedContent(post, localeField)))

---

<Layout
  footer
  t={t}
  tab='posts'
  title={t('posts')}
>
  <Container
    className='pb-16 w-full'
  >
    <h1
      class='text-3xl my-12'
    >
      { t('posts') }
    </h1>
    <Cards>
      { _.map(localizedPosts, (post) => (
        <Card
          imageUrl={post?.cardImage}
          alt={post?.imageAlt}
          slug={getRelativeLocaleUrl(Astro.currentLocale, `posts/${post._sys.filename}`)}
          t={t}
          title={post.title}
          author={post.author}
          date={post.date}
        />
      ))}
    </Cards>
  </Container>
</Layout>