---
import PathViewer from "@apps/paths/PathViewer";
import { fetchPath, fetchPaths } from '@backend/tina';
import config from '@config';
import { getTranslations } from '@backend/i18n';
import Layout from "@layouts/Layout.astro";
import { hasPathsContent } from '@utils/config';
import _ from 'underscore';

const { slug } = Astro.params;
const path = await fetchPath(slug);
const pathResponse = await fetchPath(slug, false);
const title = path?.title || t('paths');

const { t } = await getTranslations(Astro.currentLocale);

export const getStaticPaths = async () => {
  if (!hasPathsContent(config)) {
    return [];
  }

  const staticPaths = [];

  const locales = config.i18n.locales;
  const paths = await fetchPaths();

  _.each(locales, (lang) => {
    _.each(paths, (path) => {
      staticPaths.push({ params: {
        lang,
        slug: path?._sys.filename
      }})
    });
  });

  return staticPaths;
};

---

<Layout
  fullscreen
  t={t}
  tab='paths'
  title={title}
>
  { path && (
    <PathViewer
      path={pathResponse}
      client:only='react'
    />
  )}
</Layout>